name: "Deploy website code"

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - 
        uses: hashicorp/setup-terraform@v1
        with: 
          terraform_version: "1.1.3"
          terraform_wrapper: false
      - 
        name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-region: us-west-2
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
  deploy:
    needs: terraform
    if: github.ref == 'refs/heads/main' 
    defaults:
      run: 
        working-directory: "."
    runs-on: ubuntu-latest
    steps: 
      - 
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.3
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - 
        name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-region: us-west-2
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Terraform Init
        id: init
        run: terraform init
      - 
        name: "Setup themes"
        run: "git submodule update --init --recursive"
      - 
        name: "Update theme to Latest commit"
        run: "git submodule update --remote --merge"
      - 
        name: "Setup hugo"
        uses: peaceiris/actions-hugo@v2
        with: 
          hugo-version: latest
      - 
        name: Build
        run: "hugo -D --gc --verbose --minify"
      - 
        name: "Deploy static site to S3 bucket"
        run: "aws s3 sync ./public s3://rhill-vcard-website-origin/ --delete"